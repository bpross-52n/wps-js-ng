{"version":3,"sources":["../../../projects/wps-ng/src/model/settings.ts","../../../projects/wps-ng/src/model/capabilities/service-identification.ts","../../../projects/wps-ng/src/model/capabilities/address.ts","../../../projects/wps-ng/src/model/capabilities/contact-info.ts","../../../projects/wps-ng/src/model/capabilities/service-contact.ts","../../../projects/wps-ng/src/model/capabilities/service-provider.ts","../../../projects/wps-ng/src/model/capabilities/http.ts","../../../projects/wps-ng/src/model/capabilities/dcp.ts","../../../projects/wps-ng/src/model/capabilities/operation.ts","../../../projects/wps-ng/src/model/capabilities/process.ts","../../../projects/wps-ng/src/model/capabilities/capabilities.ts","../../../projects/wps-ng/src/model/capabilities/capabilities-response.ts","../../../projects/wps-ng/src/model/process.description/format.ts","../../../projects/wps-ng/src/model/process.description/data-type.ts","../../../projects/wps-ng/src/model/process.description/literal-data-domains.ts","../../../projects/wps-ng/src/model/process.description/literal-data.ts","../../../projects/wps-ng/src/model/process.description/complex-data.ts","../../../projects/wps-ng/src/model/process.description/b-box-data.ts","../../../projects/wps-ng/src/model/process.description/input.ts","../../../projects/wps-ng/src/model/process.description/output.ts","../../../projects/wps-ng/src/model/process.description/process-details.ts","../../../projects/wps-ng/src/model/process.description/process-offering.ts","../../../projects/wps-ng/src/model/process.description/process-description-response.ts","../../../projects/wps-ng/src/model/execute.process/request/output/complex-data-output.ts","../../../projects/wps-ng/src/model/execute.process/request/output/b-box-data-output.ts","../../../projects/wps-ng/src/model/execute.process/request/output/literal-data-output.ts","../../../projects/wps-ng/src/model/execute.process/response/execute-response-data.ts","../../../projects/wps-ng/src/model/execute.process/response/execute-output.ts","../../../projects/wps-ng/src/model/execute.process/response/status.ts","../../../projects/wps-ng/src/model/execute.process/response/execute-response-document.ts","../../../projects/wps-ng/src/model/execute.process/response/execute-response-object.ts","../../../projects/wps-ng/src/model/execute.process/response/execute-response.ts","../../../projects/wps-ng/src/model/get.status/status-response-document.ts","../../../projects/wps-ng/src/model/get.status/status-response.ts","../../../projects/wps-ng/src/model/get.result/result-response.ts","../../../projects/wps-ng/src/lib/wps-ng.service.ts","../../../projects/wps-ng/src/lib/wps-ng.component.ts","../../../projects/wps-ng/src/lib/wps-ng.module.ts","../../../projects/wps-ng/src/model/capabilities/capabilities-response-document.ts","../../../projects/wps-ng/src/model/execute.process/request/input/b-box-data-input.ts","../../../projects/wps-ng/src/model/execute.process/request/input/complex-data-input.ts","../../../projects/wps-ng/src/model/execute.process/request/input/literal-data-input.ts"],"names":["Settings","url","version","this","_version","_url","Object","defineProperty","prototype","ServiceIdentification","serviceIdentificationJson","_this","_title","title","_abstractValue","abstractValue","_keywords","Array","_a","keywords","forEach","e","push","_serviceType","serviceType","_serviceTypeVersions","_b","serviceTypeVersions","_fees","fees","_accessConstraints","accessConstraints","Address","addressJson","_deliveryPoint","deliveryPoint","_city","city","_administrativeArea","administrativeArea","_postalCode","postalCode","_country","country","_electronicMailAddress","electronicMailAddress","ContactInfo","contactInfoJson","_address","address","ServiceContact","serviceContactJson","_individualName","individualName","_contactInfo","contactInfo","ServiceProvider","serviceProviderJson","_providerName","providerName","_serviceContact","serviceContact","HTTP","HTTPJson","_name","name","_get","get","_post","post","DCP","DCPJson","_HTTP","Operation","operationJson","_DCP","Process","processJson","_identifier","identifier","_processVersion","processVersion","_jobControlOptions","jobControlOptions","_outputTransmission","outputTransmission","Capabilities","capabilitiesJson","_service","service","_serviceIdentification","serviceIdentification","_serviceProvider","serviceProvider","_operations","operations","_languages","languages","_processes","_c","processes","CapabilitiesResponse","capabilitiesResponseJson","_responseDocument","responseDocument","_capabilities","capabilities","Format","formatResponse","_mimeType","mimeType","_encoding","encoding","_schema","schema","DataType","dataType","_type","type","_reference","reference","LiteralDataDomains","literalDataDomainsJS","_anyValue","anyValue","_dataType","_defaultValue","defaultValue","_unitOfMeasure","unitOfMeasure","LiteralData","literalDataResponse","_formats","formats","_literalDataDomains","literalDataDomains","ComplexData","complexDataResponse","BBoxData","bboxDataResponse","_supportedCRSs","supportedCRSs","Input","inputResponse","_minOccurs","minOccurs","_maxOccurs","maxOccurs","undefined","literalData","_literalData","complexData","_complexData","boundingBoxData","_bboxData","Output","outputResponse","ProcessDetails","processResponse","_inputs","inputs","_outputs","outputs","ProcessOffering","processOfferingResponse","_process","process","_outputTransmissionModes","outputTransmissionModes","ProcessDescriptionResponse","processDescriptionResponse","_processOffering","processOffering","uom","asReference","value","transmission","crs","dimensions","lowerCorner","upperCorner","ExecuteResponseData","data","_data","ComplexDataOutput","LiteralDataOutput","BBoxDataOutput","ExecuteOutput","executeOutput","Status","statusJson","_creationTime","creationTime","_info","info","ExecuteResponseDocument","executeResponseDocumentJson","_lang","lang","_statusLocation","statusLocation","_serviceInstance","serviceInstance","_status","status","_jobId","jobId","_expirationDate","expirationDate","ExecuteResponseObject","executeResponseJson","_serviceVersion","serviceVersion","ExecuteResponse","_resultDocument","_executeResponse","executeResponse","StatusResponseDocument","statusResponseDocument","_estimatedCompletion","estimatedCompletion","_nextPoll","nextPoll","_percentageCompleted","percentageCompleted","StatusResponse","getStatusResponse","ResultResponse","resultResponse","WpsNgService","isValidUrl","Error","setting","wpsServiceJS","WpsService","URL","_","setVersion","setUrl","getCapabilitiesGET","callback","capabilitiesResponse","getCapabilities_GET","response","textStatus","errorThrown","getCapabilitiesPOST","getCapabilities_POST","processDescriptionGet","processIdentifier","describeProcess_GET","processDescriptionPost","describeProcess_POST","execute","responseFormat","executionMode","lineage","getStatus_WPS_2_0","getResult_WPS_2_0","getResultResponse","parseStoredExecuteResponse_WPS_1_0","storedExecuteResponseLocation","getXmlRequestExecuteProcess","WpsNgComponent","ngOnInit","selectors","decls","vars","template","rf","ctx","encapsulation","WpsNgModule","imports","declarations","exports","CapabilitiesResponseDocument","responseDocumentJson","_location","location","dimension","complexPayload"],"mappings":"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","sourcesContent":["export class Settings {\n  private readonly _url: string;\n  private readonly _version: string;\n\n  constructor(url: string, version: string) {\n    this._version = version;\n    this._url = url;\n  }\n\n  get url(): string {\n    return this._url;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n}\n","export class ServiceIdentification {\n\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _keywords: string[];\n  private readonly _serviceType: string;\n  private readonly _serviceTypeVersions: string[];\n  private readonly _fees: string;\n  private readonly _accessConstraints: string;\n\n  constructor(serviceIdentificationJson: any) {\n    if (serviceIdentificationJson != null){\n      this._title = serviceIdentificationJson.title;\n      this._abstractValue = serviceIdentificationJson.abstractValue;\n      this._keywords = new Array<string>();\n      serviceIdentificationJson.keywords?.forEach( (e: string) => {\n        this._keywords.push(e);\n      });\n      this._serviceType = serviceIdentificationJson.serviceType;\n      this._serviceTypeVersions = new Array<string>();\n      serviceIdentificationJson.serviceTypeVersions?.forEach( (e: string) => {\n        this._serviceTypeVersions.push(e);\n      });\n      this._fees =  serviceIdentificationJson.fees;\n      this._accessConstraints = serviceIdentificationJson.accessConstraints;\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get keywords(): string[] {\n    return this._keywords;\n  }\n\n  get serviceType(): string {\n    return this._serviceType;\n  }\n\n  get serviceTypeVersions(): string[] {\n    return this._serviceTypeVersions;\n  }\n\n  get fees(): string {\n    return this._fees;\n  }\n\n  get accessConstraints(): string {\n    return this._accessConstraints;\n  }\n}\n","export class Address {\n\n  private readonly _deliveryPoint: string;\n  private readonly _city: string;\n  private readonly _administrativeArea: string;\n  private readonly _postalCode: string;\n  private readonly _country: string;\n  private readonly _electronicMailAddress: string;\n\n  constructor(addressJson: any) {\n    this._deliveryPoint = addressJson.deliveryPoint;\n    this._city = addressJson.city;\n    this._administrativeArea = addressJson.administrativeArea;\n    this._postalCode = addressJson.postalCode;\n    this._country = addressJson.country;\n    this._electronicMailAddress = addressJson.electronicMailAddress;\n  }\n\n  get deliveryPoint(): string {\n    return this._deliveryPoint;\n  }\n\n  get city(): string {\n    return this._city;\n  }\n\n  get administrativeArea(): string {\n    return this._administrativeArea;\n  }\n\n  get postalCode(): string {\n    return this._postalCode;\n  }\n\n  get country(): string {\n    return this._country;\n  }\n\n  get electronicMailAddress(): string {\n    return this._electronicMailAddress;\n  }\n}\n","import {Address} from './address';\n\nexport class ContactInfo {\n\n  private readonly _address: Address;\n\n  constructor(contactInfoJson: any) {\n    if (contactInfoJson != null) {\n      this._address = new Address(contactInfoJson.address);\n    }\n  }\n\n  get address(): Address {\n    return this._address;\n  }\n}\n","import {ContactInfo} from './contact-info';\n\nexport class ServiceContact {\n\n  private readonly _individualName: string;\n  private readonly _contactInfo: ContactInfo;\n\n  get individualName(): string {\n    return this._individualName;\n  }\n\n  get contactInfo(): ContactInfo {\n    return this._contactInfo;\n  }\n  constructor(serviceContactJson: any) {\n    if (serviceContactJson != null){\n      this._individualName = serviceContactJson.individualName;\n      this._contactInfo = new ContactInfo(serviceContactJson.contactInfo);\n    }\n\n\n  }\n}\n","import {ServiceContact} from './service-contact';\n\nexport class ServiceProvider {\n\n  private readonly _providerName: string;\n  private readonly _serviceContact: ServiceContact;\n\n  constructor(serviceProviderJson: any) {\n    if (serviceProviderJson != null){\n      this._providerName = serviceProviderJson.providerName;\n      this._serviceContact = new ServiceContact(serviceProviderJson.serviceContact);\n    }\n\n  }\n\n  get providerName(): string {\n    return this._providerName;\n  }\n\n  get serviceContact(): ServiceContact {\n    return this._serviceContact;\n  }\n\n}\n","export class HTTP {\n\n  private readonly _name: string;\n  private readonly _get: string;\n  private readonly _post: string;\n\n  constructor(HTTPJson: any) {\n    if (HTTPJson != null)\n    {\n      this._name = HTTPJson.name;\n      this._get = HTTPJson.get;\n      this._post = HTTPJson.post;\n    }\n  }\n\n  get name(): string {\n    return this._name;\n  }\n\n  get get(): string {\n    return this._get;\n  }\n\n  get post(): string {\n    return this._post;\n  }\n}\n","import {HTTP} from './http';\nexport class DCP {\n\n  private readonly _HTTP: HTTP;\n\n  constructor(DCPJson: any) {\n    if (DCPJson != null) {\n      this._HTTP = new HTTP(DCPJson.HTTP);\n    }\n  }\n\n  get HTTP(): HTTP {\n    return this._HTTP;\n  }\n}\n","import {DCP} from './dcp';\n\nexport class Operation {\n  private readonly _DCP: DCP;\n\n  constructor(operationJson: any) {\n    if (operationJson != null){\n      this._DCP = new DCP(operationJson.DCP);\n    }\n  }\n\n  get DCP(): DCP {\n    return this._DCP;\n  }\n}\n","export class Process {\n  private readonly _title: string;\n  private readonly _identifier: string;\n  private readonly _processVersion: string;\n  private readonly _jobControlOptions: string;\n  private readonly _outputTransmission: string;\n\n  constructor(processJson: any) {\n    if (processJson != null){\n      this._title = processJson.title;\n      this._identifier = processJson.identifier;\n      this._processVersion = processJson.processVersion;\n      this._jobControlOptions = processJson.jobControlOptions;\n      this._outputTransmission = processJson.outputTransmission;\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get processVersion(): string {\n    return this._processVersion;\n  }\n\n  get jobControlOptions(): string {\n    return this._jobControlOptions;\n  }\n\n  get outputTransmission(): string {\n    return this._outputTransmission;\n  }\n}\n","import {ServiceIdentification} from './service-identification';\nimport {ServiceProvider} from './service-provider';\nimport {Operation} from './operation';\nimport {Process} from './process';\n\nexport class Capabilities {\n\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _serviceIdentification: ServiceIdentification;\n  private readonly _serviceProvider: ServiceProvider;\n  private readonly _operations: Operation[];\n  private readonly _languages: string[];\n  private readonly _processes: Process[];\n\n  constructor(capabilitiesJson: any) {\n    if (capabilitiesJson != null) {\n      this._service = capabilitiesJson.service;\n      this._version = capabilitiesJson.version;\n      this._serviceIdentification = new ServiceIdentification(capabilitiesJson.serviceIdentification);\n      this._serviceProvider = new ServiceProvider(capabilitiesJson.serviceProvider);\n      this._operations = new Array<Operation>();\n      capabilitiesJson.operations?.forEach(e => {\n        this._operations.push(new Operation(e));\n      });\n      this._languages = new Array<string>();\n      capabilitiesJson.languages?.forEach(e => {\n        this._languages.push(e);\n      });\n\n      this._processes = new Array<Process>();\n      capabilitiesJson.processes?.forEach(e => {\n        this._processes.push(new Process(e));\n      });\n      this._processes = capabilitiesJson.processes;\n    }\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get serviceIdentification(): ServiceIdentification {\n    return this._serviceIdentification;\n  }\n\n  get serviceProvider(): ServiceProvider {\n    return this._serviceProvider;\n  }\n\n  get operations(): Operation[] {\n    return this._operations;\n  }\n\n  get languages(): string[] {\n    return this._languages;\n  }\n\n  get processes(): Process[] {\n    return this._processes;\n  }\n}\n","import {Capabilities} from './capabilities';\n\nexport class CapabilitiesResponse {\n  private readonly _responseDocument: Document;\n  private readonly _capabilities: Capabilities;\n\n  constructor(capabilitiesResponseJson: any) {\n    this._responseDocument = capabilitiesResponseJson.responseDocument;\n    this._capabilities = new Capabilities(capabilitiesResponseJson.capabilities);\n  }\n\n\n  get responseDocument(): Document {\n    return this._responseDocument;\n  }\n\n  get capabilities(): Capabilities {\n    return this._capabilities;\n  }\n}\n","export class Format {\n  private readonly _mimeType: string;\n  private readonly _encoding: string;\n  private readonly _schema: string;\n\n  constructor(formatResponse: any) {\n    if ( formatResponse != null){\n      this._mimeType = formatResponse.mimeType;\n      this._encoding = formatResponse.encoding;\n      this._schema = formatResponse.schema;\n    }\n  }\n\n  get mimeType(): string {\n    return this._mimeType;\n  }\n\n  get encoding(): string {\n    return this._encoding;\n  }\n\n  get schema(): string {\n    return this._schema;\n  }\n}\n","export class DataType {\n  private readonly _type: string;\n  private readonly _reference: string;\n\n  constructor(dataType: any) {\n    if (dataType != null){\n      this._type = dataType.type;\n      this._reference = dataType.reference;\n    }\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get reference(): string {\n    return this._reference;\n  }\n}\n","import {DataType} from './data-type';\n\nexport class LiteralDataDomains {\n  private readonly _anyValue: boolean;\n  private readonly _dataType: DataType;\n  private readonly _defaultValue: string;\n  private readonly _unitOfMeasure: string;\n\n\n  constructor(literalDataDomainsJS: any) {\n    this._anyValue = literalDataDomainsJS.anyValue;\n    this._dataType = new DataType(literalDataDomainsJS.dataType);\n    this._defaultValue = literalDataDomainsJS.defaultValue;\n    this._unitOfMeasure = literalDataDomainsJS.unitOfMeasure;\n  }\n\n  get anyValue(): boolean {\n    return this._anyValue;\n  }\n\n  get dataType(): DataType {\n    return this._dataType;\n  }\n\n  get defaultValue(): string {\n    return this._defaultValue;\n  }\n\n  get unitOfMeasure(): string {\n    return this._unitOfMeasure;\n  }\n}\n","import {Format} from './format';\nimport {LiteralDataDomains} from './literal-data-domains';\n\nexport class LiteralData {\n  private readonly _literalDataDomains: LiteralDataDomains[];\n  private readonly _formats: Format[];\n\n  constructor(literalDataResponse: any) {\n    if (literalDataResponse != null){\n      this._formats = new Array<Format>();\n      literalDataResponse.formats?.forEach( e => {\n        this._formats.push(new Format(e));\n      });\n      this._literalDataDomains = new Array<LiteralDataDomains>();\n      literalDataResponse.literalDataDomains?.forEach( e => {\n        this._literalDataDomains.push(new LiteralDataDomains(e));\n      });\n    }\n\n  }\n  get literalDataDomains(): LiteralDataDomains[] {\n    return this._literalDataDomains;\n  }\n\n  get formats(): Format[] {\n    return this._formats;\n  }\n}\n","import {Format} from './format';\n\nexport class ComplexData {\n  private readonly _formats: Format[];\n\n  constructor(complexDataResponse: any) {\n    if (complexDataResponse != null){\n      this._formats = new Array<Format>();\n      complexDataResponse.formats?.forEach( e => {\n        this._formats.push(new Format(e));\n      });\n    }\n  }\n\n  get formats(): Format[] {\n    return this._formats;\n  }\n}\n\n","import {Format} from './format';\n\nexport class BBoxData {\n  private readonly _formats: Format[];\n  private readonly _supportedCRSs: string[];\n\n  constructor(bboxDataResponse: any) {\n    if (bboxDataResponse != null){\n      this._formats = new Array<Format>();\n      bboxDataResponse.formats?.forEach( e => {\n        this._formats.push(new Format(e));\n      });\n\n      this._supportedCRSs = new Array<string>();\n      bboxDataResponse.supportedCRSs?.forEach( e => {\n        this._supportedCRSs.push(e);\n      });\n    }\n  }\n\n\n  get supportedCRSs(): string[] {\n    return this._supportedCRSs;\n  }\n\n  get formats(): Format[] {\n    return this._formats;\n  }\n}\n","import {LiteralData} from './literal-data';\nimport {ComplexData} from './complex-data';\nimport {BBoxData} from './b-box-data';\n\nexport class Input {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _minOccurs: string;\n  private readonly _maxOccurs: string;\n  private readonly _literalData: LiteralData;\n  private readonly _complexData: ComplexData;\n  private readonly _bboxData: BBoxData;\n\n  constructor(inputResponse: any) {\n    if (inputResponse != null){\n      this._title = inputResponse.title;\n      this._abstractValue = inputResponse.abstractValue;\n      this._identifier = inputResponse.identifier;\n      this._minOccurs = inputResponse.minOccurs;\n      this._maxOccurs = inputResponse.maxOccurs;\n      if (inputResponse.literalData !== undefined) {\n        this._literalData =  new LiteralData(inputResponse.literalData);\n      }\n      else if (inputResponse.complexData !== undefined) {\n        this._complexData = new ComplexData(inputResponse.complexData);\n      }\n      else if (inputResponse.boundingBoxData !== undefined) {\n        this._bboxData = new BBoxData(inputResponse.boundingBoxData);\n      }\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get minOccurs(): string {\n    return this._minOccurs;\n  }\n\n  get maxOccurs(): string {\n    return this._maxOccurs;\n  }\n\n  get literalData(): LiteralData {\n    return this._literalData;\n  }\n}\n","import { ComplexData } from './complex-data';\nimport {LiteralData} from './literal-data';\nimport {BBoxData} from './b-box-data';\n\nexport class Output {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _complexData: ComplexData;\n  private readonly _literalData: LiteralData;\n  private readonly _bboxData: BBoxData;\n\n  constructor(outputResponse: any) {\n    if (outputResponse != null){\n\n      this._title = outputResponse.title;\n      this._abstractValue = outputResponse.abstractValue;\n      this._identifier = outputResponse.identifier;\n\n      if (outputResponse.literalData !== undefined) {\n        this._literalData =  new LiteralData(outputResponse.literalData);\n      }\n      if (outputResponse.complexData !== undefined) {\n        this._complexData = new ComplexData(outputResponse.complexData);\n      }\n      if (outputResponse.boundingBoxData !== undefined) {\n        this._bboxData = new BBoxData(outputResponse.boundingBoxData);\n      }\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get complexData(): ComplexData {\n    return this._complexData;\n  }\n}\n","import { Input } from './input';\nimport {Output} from './output';\n\nexport class ProcessDetails {\n  private readonly _title: string;\n  private readonly _abstractValue: string;\n  private readonly _identifier: string;\n  private readonly _inputs: Input[];\n  private readonly _outputs: Output[];\n\n\n  constructor(processResponse: any) {\n    if (processResponse != null){\n      this._title = processResponse.title;\n      this._abstractValue = processResponse.abstractValue;\n      this._identifier = processResponse.identifier;\n      this._inputs = new Array<Input>();\n      processResponse.inputs?.forEach( e => {\n        this._inputs.push(new Input(e));\n      });\n      this._outputs = new Array<Output>();\n      processResponse.outputs?.forEach( e => {\n        this._outputs.push(new Output(e));\n      });\n    }\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get abstractValue(): string {\n    return this._abstractValue;\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get inputs(): Input[] {\n    return this._inputs;\n  }\n\n  get outputs(): Output[] {\n    return this._outputs;\n  }\n}\n","import {ProcessDetails} from './process-details';\n\nexport class ProcessOffering {\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _process: ProcessDetails;\n  private readonly _processVersion: string;\n  private readonly _jobControlOptions: string[];\n  private readonly _outputTransmissionModes: string[];\n\n  constructor(processOfferingResponse: any) {\n    if (processOfferingResponse != null){\n      this._service = processOfferingResponse.service;\n      this._version = processOfferingResponse.version;\n      this._process = new ProcessDetails(processOfferingResponse.process);\n      this._processVersion = processOfferingResponse.processVersion;\n      this._jobControlOptions = new Array<string>();\n      processOfferingResponse.jobControlOptions?.forEach(e => {\n        this._jobControlOptions.push(e);\n      });\n      this._outputTransmissionModes = new Array<string>();\n      processOfferingResponse.outputTransmissionModes?.forEach(e => {\n        this._outputTransmissionModes.push(e);\n      });\n    }\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get process(): ProcessDetails {\n    return this._process;\n  }\n\n  get processVersion(): string {\n    return this._processVersion;\n  }\n\n  get jobControlOptions(): string[] {\n    return this._jobControlOptions;\n  }\n\n  get outputTransmissionModes(): string[] {\n    return this._outputTransmissionModes;\n  }\n}\n","import {ProcessOffering} from './process-offering';\n\nexport class ProcessDescriptionResponse {\n  private readonly _responseDocument: Document;\n  private readonly _processOffering: ProcessOffering;\n\n  constructor(processDescriptionResponse: any) {\n    if (processDescriptionResponse != null){\n      this._responseDocument = processDescriptionResponse.responseDocument;\n      this._processOffering = new ProcessOffering(processDescriptionResponse.processOffering);\n    }\n  }\n\n  get responseDocument(): Document {\n    return this._responseDocument;\n  }\n\n  get processOffering(): ProcessOffering {\n    return this._processOffering;\n  }\n}\n","import {DataOutput} from './data-output';\n\nexport class ComplexDataOutput implements  DataOutput {\n  type: string;\n  identifier: string;\n  mimeType: string;\n  schema: string;\n  encoding: string;\n  uom: string;\n  asReference: boolean;\n  title: string;\n  abstractValue: any;\n  value: any;\n  transmission: string;\n\n  /**\n   * the following parameters are mandatory: identifier\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier output-request identifier\n   * @mimeType MIME type of the input; may be 'undefined'\n   * @schema reference to a schema; may be 'undefined'\n   * @encoding encoding; may be 'undefined'\n   * @uom unit of measure; may be 'undefined'\n   * @asReference boolean, \"true\" or \"false\"\n   * @title new title\n   * @abstractValue new description as text of the 'Abstract' element\n   * \t\t\t\t  of the response document\n   * @transmission either \"value\" or \"reference\"\n   */\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string,\n              uom: string, asReference: boolean = false, title: string, abstractValue: any, value?: any, transmission?: string) {\n    this.type = 'complex';\n    this.identifier = identifier;\n    this.mimeType = mimeType;\n    this.schema = schema;\n    this.encoding = encoding;\n    this.uom = uom;\n    this.asReference = asReference;\n    this.title = title;\n    this.abstractValue = abstractValue;\n    this.value = value;\n    if (transmission === undefined) {\n      this.transmission = 'value';\n    }\n    else {\n      this.transmission = transmission;\n    }\n  }\n}\n","import {DataOutput} from './data-output';\n\nexport class BBoxDataOutput implements DataOutput{\n  readonly type: string;\n  readonly identifier: string;\n  readonly mimeType: string;\n  readonly schema: string;\n  readonly encoding: string;\n  readonly crs: string;\n  readonly dimensions: string;\n  readonly lowerCorner: string;\n  readonly upperCorner: string;\n  readonly transmission: string;\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string, crs: string,\n              dimensions: string, lowerCorner: string, upperCorner: string, transmission?: string  ) {\n    this.type = 'bbox';\n    this.identifier = identifier;\n    this.mimeType = mimeType;\n    this.schema = schema;\n    this.encoding = encoding;\n    this.crs = crs;\n    this.dimensions = dimensions;\n    this.lowerCorner = lowerCorner;\n    this.upperCorner = upperCorner;\n    if (transmission === undefined) {\n      this.transmission = 'value';\n    }\n    else {\n      this.transmission = transmission;\n    }\n  }\n\n}\n","import {DataOutput} from './data-output';\n\nexport class LiteralDataOutput implements DataOutput{\n  readonly type: string;\n  readonly identifier: string;\n  readonly mimeType: string;\n  readonly schema: string;\n  readonly encoding: string;\n  readonly asReference: boolean;\n  readonly abstractValue: any;\n  readonly dataType: string;\n  readonly uom: string;\n  readonly value: any;\n  readonly transmission: string;\n\n\n  constructor(identifier: string, mimeType: string, schema: string, encoding: string, asReference: boolean = false,\n              abstractValue: any, dataType: string, uom: string, value: string, transmission?: string) {\n    this.type = 'literal';\n    this.identifier = identifier;\n    this.mimeType = mimeType;\n    this.schema = schema;\n    this.encoding = encoding;\n    this.asReference = asReference;\n    this.abstractValue = abstractValue;\n    this.dataType = dataType;\n    this.uom = uom;\n    this.value = value;\n    if (transmission === undefined) {\n      this.transmission = 'value';\n    }\n    else {\n      this.transmission = transmission;\n    }\n  }\n}\n","import {ComplexDataOutput} from '../request/output/complex-data-output';\nimport {DataOutput} from '../request/output/data-output';\nimport {BBoxDataOutput} from '../request/output/b-box-data-output';\nimport {LiteralDataOutput} from '../request/output/literal-data-output';\nimport {ComplexDataInput} from '../request/input/complex-data-input';\nimport {LiteralDataInput} from '../request/input/literal-data-input';\nimport {BBoxDataInput} from '../request/input/b-box-data-input';\n\nexport class ExecuteResponseData {\n  private readonly _data: DataOutput;\n\n  constructor(data: any) {\n    if ( data != null && data.complexData != null){\n      this._data = new ComplexDataOutput(\n        data.complexData.identifier,\n        data.complexData.mimeType,\n        data.complexData.schema,\n        data.complexData.encoding,\n        data.complexData.uom,\n        data.complexData.asReference,\n        data.complexData.title,\n        data.complexData.abstractValue,\n        data.complexData.value);\n    }\n    else if ( data != null && data.literalData != null) {\n      this._data = new LiteralDataOutput(\n        data.literalData.identifier,\n        data.literalData.mimeType,\n        data.literalData.schema,\n        data.literalData.encoding,\n        data.literalData.asReference,\n        data.literalData.abstractValue,\n        data.literalData.dataType,\n        data.literalData.uom,\n        data.literalData.value);\n    }\n\n    else if ( data != null && data.boundingBoxData != null) {\n      this._data = new BBoxDataOutput(\n        data.boundingBoxData.identifier,\n        data.boundingBoxData.mimeType,\n        data.boundingBoxData.schema,\n        data.boundingBoxData.encoding,\n        data.boundingBoxData.crs,\n        data.boundingBoxData.dimensions,\n        data.boundingBoxData.lowerCorner,\n        data.boundingBoxData.upperCorner);\n    }\n  }\n\n  get data(): DataOutput {\n    return this._data;\n  }\n}\n","import {ExecuteResponseData} from './execute-response-data';\n\nexport class ExecuteOutput {\n  private readonly _identifier: string;\n  private readonly _title: string;\n  private readonly _abstractValue: any;\n  private readonly _data: ExecuteResponseData;\n\n  constructor(executeOutput: any) {\n    this._identifier = executeOutput.identifier;\n    this._title = executeOutput.title;\n    this._abstractValue = executeOutput.abstractValue;\n    this._data = new ExecuteResponseData(executeOutput.data);\n  }\n\n  get identifier(): string {\n    return this._identifier;\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  get data(): ExecuteResponseData {\n    return this._data;\n  }\n\n  get abstractValue(): any {\n    return this._abstractValue;\n  }\n}\n","\nexport class Status {\n  private readonly _creationTime: Date;\n  private readonly _info: string;\n\n  constructor(statusJson: any) {\n    if (statusJson != null){\n      this._creationTime = statusJson.creationTime;\n      this._info = statusJson.info;\n    }\n  }\n\n  get creationTime(): Date {\n    return this._creationTime;\n  }\n\n  get info(): string {\n    return this._info;\n  }\n}\n","import {Process} from '../../capabilities/process';\nimport {ExecuteOutput} from './execute-output';\nimport {Status} from './status';\n\nexport class ExecuteResponseDocument {\n  // Property only for Version 2\n  private readonly _jobId: string;\n  // Property only for Async call\n  private readonly _expirationDate: string;\n  private readonly _service: string;\n  private readonly _version: string;\n  private readonly _lang: string;\n  private readonly _statusLocation: string;\n  private readonly _serviceInstance: string;\n  private readonly _process: Process;\n  private readonly _status: Status;\n  private readonly _outputs: ExecuteOutput[];\n\n  constructor(executeResponseDocumentJson: any) {\n    if (executeResponseDocumentJson != null){\n      this._service = executeResponseDocumentJson.service;\n      this._version = executeResponseDocumentJson.version;\n      this._lang = executeResponseDocumentJson.lang;\n      this._statusLocation = executeResponseDocumentJson.statusLocation;\n      this._serviceInstance = executeResponseDocumentJson.serviceInstance;\n      this._process = new Process(executeResponseDocumentJson.process);\n      this._status = new Status(executeResponseDocumentJson.status);\n      this._outputs = new Array<ExecuteOutput>();\n      executeResponseDocumentJson.outputs?.forEach(e => {\n        this._outputs.push(new ExecuteOutput(e));\n      });\n      this._jobId = executeResponseDocumentJson.jobId;\n      this._expirationDate = executeResponseDocumentJson.expirationDate;\n    }\n  }\n\n\n  get expirationDate(): string {\n    return this._expirationDate;\n  }\n\n  get lang(): string {\n    return this._lang;\n  }\n\n  get service(): string {\n    return this._service;\n  }\n\n  get version(): string {\n    return this._version;\n  }\n\n  get statusLocation(): string {\n    return this._statusLocation;\n  }\n\n  get serviceInstance(): string {\n    return this._serviceInstance;\n  }\n\n  get process(): Process {\n    return this._process;\n  }\n\n  get status(): Status {\n    return this._status;\n  }\n\n  get outputs(): ExecuteOutput[] {\n    return this._outputs;\n  }\n\n  get jobId(): string {\n    return this._jobId;\n  }\n}\n","import {ExecuteResponseDocument} from './execute-response-document';\n\nexport class ExecuteResponseObject {\n  private readonly _type: string;\n  private readonly _serviceVersion: string;\n  private readonly _responseDocument: ExecuteResponseDocument;\n\n  constructor(executeResponseJson: any) {\n    // type: string, serviceVersion: string, responseDocument: ExecuteResponseDocument\n    this._type = executeResponseJson.type;\n    this._serviceVersion = executeResponseJson.serviceVersion;\n    this._responseDocument = new ExecuteResponseDocument(executeResponseJson.responseDocument);\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get serviceVersion(): string {\n    return this._serviceVersion;\n  }\n\n  get responseDocument(): ExecuteResponseDocument {\n    return this._responseDocument;\n  }\n}\n","import {ExecuteResponseObject} from './execute-response-object';\n\nexport class ExecuteResponse {\n  private readonly _resultDocument: Document;\n  private readonly _executeResponse: ExecuteResponseObject;\n\n  constructor(executeResponseJson: any) {\n    if (executeResponseJson != null) {\n      this._resultDocument = executeResponseJson.responseDocument;\n      this._executeResponse = new ExecuteResponseObject(executeResponseJson.executeResponse);\n    }\n  }\n\n  get resultDocument(): Document {\n    return this._resultDocument;\n  }\n\n  get executeResponse(): ExecuteResponseObject {\n    return this._executeResponse;\n  }\n}\n","export class StatusResponseDocument {\n  private readonly _jobId: string;\n  private readonly _status: string;\n  private readonly _expirationDate: Date;\n  private readonly _estimatedCompletion: Date;\n  private readonly _nextPoll: Date;\n  private readonly _percentageCompleted: number;\n\n  constructor(statusResponseDocument: any) {\n    if (statusResponseDocument != null) {\n      this._jobId = statusResponseDocument.jobId;\n      this._status = statusResponseDocument.status;\n      this._expirationDate = statusResponseDocument.expirationDate;\n      this._estimatedCompletion = statusResponseDocument.estimatedCompletion;\n      this._nextPoll = statusResponseDocument.nextPoll;\n      this._percentageCompleted = statusResponseDocument.percentageCompleted;\n    }\n  }\n\n  get jobId(): string {\n    return this._jobId;\n  }\n\n  get status(): string {\n    return this._status;\n  }\n\n  get expirationDate(): Date {\n    return this._expirationDate;\n  }\n\n  get estimatedCompletion(): Date {\n    return this._estimatedCompletion;\n  }\n\n  get nextPoll(): Date {\n    return this._nextPoll;\n  }\n\n  get percentageCompleted(): number {\n    return this._percentageCompleted;\n  }\n}\n","import {StatusResponseDocument} from './status-response-document';\n\nexport class StatusResponse {\n  private readonly _type: string;\n  private readonly _serviceVersion: string;\n  private readonly _responseDocument: StatusResponseDocument;\n\n  constructor(getStatusResponse: any) {\n    if (getStatusResponse != null){\n      this._type = getStatusResponse.type;\n      this._serviceVersion = getStatusResponse.serviceVersion;\n      this._responseDocument = new StatusResponseDocument(getStatusResponse.responseDocument);\n    }\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  get serviceVersion(): string {\n    return this._serviceVersion;\n  }\n\n  get responseDocument(): StatusResponseDocument {\n    return this._responseDocument;\n  }\n}\n","import {ExecuteResponseObject} from '../execute.process/response/execute-response-object';\n\nexport class ResultResponse {\n  private readonly _responseDocument: Document;\n  private readonly _executeResponse: ExecuteResponseObject;\n\n  constructor(resultResponse: any) {\n    if (resultResponse != null){\n      this._responseDocument = resultResponse.responseDocument;\n      this._executeResponse = new ExecuteResponseObject(resultResponse.executeResponse);\n    }\n  }\n\n  get responseDocument(): Document {\n    return this._responseDocument;\n  }\n\n  get executeResponse(): ExecuteResponseObject {\n    return this._executeResponse;\n  }\n}\n","import {Settings} from '../model/settings';\nimport {CapabilitiesResponse} from '../model/capabilities/capabilities-response';\nimport {ProcessDescriptionResponse} from '../model/process.description/process-description-response';\nimport {ExecuteResponse} from '../model/execute.process/response/execute-response';\nimport {DataInput} from '../model/execute.process/request/input/data-input';\nimport {DataOutput} from '../model/execute.process/request/output/data-output';\nimport {StatusResponse} from '../model/get.status/status-response';\nimport {ResultResponse} from '../model/get.result/result-response';\n\nconst WPS_VERSION_1 = '1.0.0';\nconst WPS_VERSION_2 = '2.0.0';\ndeclare var WpsService: any;\n\n\nexport class WpsNgService {\n  private wpsServiceJS: any;\n  constructor(private _version: string , private _url: string) {\n    // Url Check\n    if (!WpsNgService.isValidUrl(_url)) {\n      throw new Error('Url ' + _url + ' is not valid.');\n    }\n    // Version Check\n    this._version = (_version === WPS_VERSION_2) ? WPS_VERSION_2 : WPS_VERSION_1;\n\n    const setting = new Settings(_url, _version);\n    this.wpsServiceJS = new WpsService(setting);\n  }\n\n  /**\n   * Utility Function to check URL Validity\n   */\n  private static isValidUrl(url: string): boolean {\n    try {\n      // tslint:disable-next-line:no-unused-expression\n      new URL(url);\n    } catch (_) {\n      return false;\n    }\n    return true;\n  }\n\n\n  /**\n   * allowed values : \"1.0.0\" or \"2.0.0\"\n   *\n   * requires Constant.js\n   */\n  setVersion(version: string = WPS_VERSION_2): void {\n    this._version = (version === WPS_VERSION_2) ? WPS_VERSION_2 : WPS_VERSION_1;\n  }\n\n  /**\n   * allowed values : \"1.0.0\" or \"2.0.0\"\n   *\n   * requires Constant.js\n   */\n  setUrl(url: string): void{\n    if (!WpsNgService.isValidUrl(url)) {\n      throw new Error('Url ' + url + ' is not valid.');\n    }\n    this._url = url;\n  }\n\n\n  get version(): string {\n    return this._version;\n  }\n\n  get url(): string {\n    return this._url;\n  }\n\n  /**\n   * getCapabilities via HTTP GET\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method\n   */\n  getCapabilitiesGET(callback: (response: CapabilitiesResponse) => void): void {\n    let capabilitiesResponse: CapabilitiesResponse;\n    this.wpsServiceJS.getCapabilities_GET((response: any) => {\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      capabilitiesResponse = new CapabilitiesResponse(response);\n      callback(capabilitiesResponse);\n    });\n  }\n\n  /**\n   * getCapabilities via HTTP POST\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   */\n  getCapabilitiesPOST(callback: (capabilitiesResponse: CapabilitiesResponse) => void) {\n    let capabilitiesResponse: CapabilitiesResponse;\n    this.wpsServiceJS.getCapabilities_POST((response: any) => {\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      capabilitiesResponse = new CapabilitiesResponse(response);\n      callback(capabilitiesResponse);\n    });\n  }\n\n  /**\n   * process description via HTTP GET\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   */\n  processDescriptionGet( processIdentifier: string , callback: (response: ProcessDescriptionResponse) => void) {\n    let processDescriptionResponse: ProcessDescriptionResponse;\n    this.wpsServiceJS.describeProcess_GET( (response: any) => {\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      processDescriptionResponse = new ProcessDescriptionResponse(response);\n      callback(processDescriptionResponse);\n    }, processIdentifier);\n  }\n\n  /**\n   * process description via HTTP POST\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   */\n  processDescriptionPost( processIdentifier: string , callback: (response: ProcessDescriptionResponse) => void) {\n    let processDescriptionResponse: ProcessDescriptionResponse;\n    this.wpsServiceJS.describeProcess_POST( (response: any) => {\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      processDescriptionResponse = new ProcessDescriptionResponse(response);\n      callback(processDescriptionResponse);\n    }, processIdentifier);\n  }\n\n\n  /**\n   * WPS execute request via HTTP POST\n   *\n   * @callbackFunction is triggered on success-event of JQuery.ajax method.\n   *                   Takes the response object as argument\n   * @processIdentifier the identifier of the process\n   * @responseFormat either \"raw\" or \"document\", default is \"document\"\n   * @executionMode either \"sync\" or \"async\";\n   * @lineage only relevant for WPS 1.0; boolean, if \"true\" then returned\n   *          response will include original input and output definition\n   * @inputs an array of needed Input objects, use JS-object InputGenerator to\n   *         create inputs\n   * @outputs an array of requested Output objects, use JS-object\n   *          OutputGenerator to create inputs\n   */\n\n  execute(callback: (response: ExecuteResponse) => void , processIdentifier: string, responseFormat: string, executionMode: string,\n          lineage: boolean, inputs: Array<DataInput>, outputs: Array<DataOutput>) {\n    let executeResponse;\n    this.wpsServiceJS.execute( (response: any) => {\n      // Check for error\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      executeResponse = response;\n      callback(new ExecuteResponse(executeResponse));\n    }, processIdentifier, responseFormat, executionMode, lineage, inputs, outputs);\n  }\n\n  /**\n   * WPS 2.0 getStatus operation to retrieve the status of an executed job\n   *\n   * Not usable with WPS 1.0\n   *\n   * @callbackFunction a callback function that will be triggered with the\n   *                   parsed StatusInfo document as argument\n   * @jobId the ID of the asynchronously executed job\n   */\n  getStatus_WPS_2_0(callback: (StatusResponse) => void, jobId: string) {\n    let getStatusResponse;\n    this.wpsServiceJS.getStatus_WPS_2_0( (response: any) => {\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      getStatusResponse = new StatusResponse(response.executeResponse);\n      callback(getStatusResponse);\n    }, jobId);\n  }\n\n  /**\n   * WPS 2.0 getResult operation to retrieve the Result of an executed job\n   *\n   * Not usable with WPS 1.0\n   *\n   * @callbackFunction a callback function that will be triggered with the\n   *                   parsed StatusInfo document as argument\n   * @jobId the ID of the asynchronously executed job\n   */\n  getResult_WPS_2_0(callback: (resultResponse: ResultResponse) => void, jobId: string) {\n    let getResultResponse: ResultResponse;\n    this.wpsServiceJS.getResult_WPS_2_0( (response: any) => {\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      getResultResponse = new ResultResponse(response);\n      callback(getResultResponse);\n    }, jobId);\n  }\n\n  /**\n   * Only important for WPS 1.0\n   *\n   * @callbackFunction a callback function that will be triggered with the\n   *                   parsed executeResponse as argument\n   * @storedExecuteResponseLocation the url, where the execute response\n   *                                document is located / can be retrieved\n   *                                from\n   */\n\n  parseStoredExecuteResponse_WPS_1_0(callback: (response: ExecuteResponse) => void, storedExecuteResponseLocation: string){\n    let executeResponse: ExecuteResponse;\n    this.wpsServiceJS.parseStoredExecuteResponse_WPS_1_0( (response: any) => {\n      if (response.textStatus === 'error') {\n        throw new Error(response.errorThrown);\n      }\n      executeResponse = new ExecuteResponse(response);\n      callback(executeResponse);\n    }, storedExecuteResponseLocation);\n  }\n\n  getXmlRequestExecuteProcess(processIdentifier: string, responseFormat: string, executionMode: string,\n                              lineage: boolean, inputs: Array<DataInput>, outputs: Array<DataOutput>): string {\n    return this.wpsServiceJS.getXmlRequestExecuteProcess( processIdentifier, responseFormat,\n      executionMode, lineage, inputs, outputs);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-wps-ng',\n  template: ``,\n  styles: [\n  ]\n})\nexport class WpsNgComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { WpsNgComponent } from './wps-ng.component';\n\n\n\n@NgModule({\n  declarations: [WpsNgComponent],\n  imports: [\n  ],\n  exports: [WpsNgComponent]\n})\nexport class WpsNgModule { }\n","export class CapabilitiesResponseDocument {\n  private readonly _location: string;\n\n  constructor(responseDocumentJson: any) {\n    if (responseDocumentJson != null) {\n      this._location = responseDocumentJson.location;\n    }\n  }\n\n  get location(): string {\n    return this._location;\n  }\n}\n","import {DataInput} from './data-input';\n\nexport class BBoxDataInput implements DataInput{\n   identifier: string;\n   type: string;\n   crs: string;\n   dimension: string;\n   lowerCorner: string;\n   upperCorner: string;\n\n  /**\n   * the following parameters are mandatory: identifier, crs,\n   * lowerCorner and upperCorner\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @crs coordinate reference system URI\n   * @dimension number of dimensions in this CRS\n   * @lowerCorner orderedSequence of double values\n   * @upperCorner orderedSequence of double values\n   */\n\n  constructor( identifier: string, crs: string, dimension: string, lowerCorner: string, upperCorner: string) {\n    this.type = 'bbox';\n    this.identifier = identifier;\n    this.crs = crs;\n    this.dimension = dimension || undefined;\n    this.lowerCorner = lowerCorner;\n    this.upperCorner = upperCorner;\n  }\n}\n","import {DataInput} from './data-input';\n\nexport class ComplexDataInput implements DataInput{\n  type: string;\n  identifier: string;\n  mimeType: string;\n  schema: string;\n  encoding: string;\n  asReference: boolean;\n  complexPayload: any;\n\n  /**\n   * the following parameters are mandatory: identifier and\n   * complexPayload\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @mimeType MIME type of the input-request; may be 'undefined'\n   * @schema reference to a schema; may be 'undefined'\n   * @encoding encoding; may be 'undefined'\n   * @complexPayload the complex payload (XML tags) as String\n   * @asReference boolean, either \"true\" or \"false\", indicating\n   *              whether parameter body contains a URL as reference\n   *              to an external body or the actual POST body\n   */\n\n\n  constructor(identifier: string, mimeType: string,\n              schema: string, encoding: string,\n              asReference: boolean = false, complexPayload: any) {\n    this.type = 'complex';\n    this.identifier = identifier;\n    this.mimeType = mimeType;\n    this.schema = schema;\n    this.encoding = encoding;\n    this.asReference = asReference;\n    this.complexPayload = complexPayload;\n  }\n}\n","import {DataInput} from './data-input';\n\nexport class LiteralDataInput implements DataInput{\n  type: string;\n  identifier: string;\n  dataType: string;\n  uom: string;\n  value: string;\n\n  /**\n   * the following parameters are mandatory: identifier and value\n   *\n   * the rest might be set to 'undefined'!\n   *\n   * @identifier input-request identifier\n   * @dataType data type of the input-request; may be 'undefined'\n   * @uom unit of measure; may be 'undefined'\n   * @value the literal value of the input-request\n   */\n  constructor(identifier: string, dataType: string, uom: string, value: string) {\n    this.type = 'literal';\n    this.identifier = identifier;\n    this.dataType = dataType;\n    this.uom = uom;\n    this.value = value;\n  }\n\n}\n"]}